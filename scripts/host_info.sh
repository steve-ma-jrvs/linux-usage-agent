#!/bin/bash

#Setup arguments
psql_host=$1
port=$2
db_name=$3
user_name=$4
password=$5

lscpu_out=$(lscpu)

get_hostname(){
    host_name=$(hostname)
    echo "host_name=$host_name"
}

get_cpu_number(){
    cpu_number=$(echo "$lscpu_out" | egrep "^CPU\(s\):" | awk '{print $2}' | xargs )
    echo "cpu_number=$cpu_number"
}

#helper function
get_lscpu_value(){
    info=$1
    info_value=$(echo "$lscpu_out" | egrep "^$info" | awk -F':' '{print $2}' | xargs )
    echo "$info=$info_value"
}

get_cpu_architecture(){
    get_lscpu_value "Architecture"
    cpu_architecture=$info_value
}

get_cpu_model(){
    get_lscpu_value "Model name"
    cpu_model=$info_value
}

get_cpu_mhz(){
    get_lscpu_value "CPU MHz"
    cpu_mhz=$info_value
}

get_L2_cache(){
    get_lscpu_value "L2 cache"
    L2_cache=$(echo $info_value | sed 's/K//' | xargs)
}

#Step 1: parse data and setup variables
get_hostname
get_cpu_number
get_cpu_architecture
get_cpu_model
get_cpu_mhz
get_L2_cache
timestamp=$(date "+%Y-%m-%d %H:%M:%S")
echo "timestamp=$timestamp"
total_mem=$(cat /proc/meminfo | awk '{print $2}' | head -1 | xargs)
echo "total_memory=$total_mem"

#Step 2: construct INSERT Statement
insert_statement=$(cat <<-END
INSERT INTO host_info(hostname, cpu_number, cpu_architecture, cpu_model, cpu_mhz, l2_cache, "timestamp", total_mem) VALUES('${host_name}',${cpu_number}, '${cpu_architecture}', '${cpu_model}', ${cpu_mhz}, ${L2_cache}, '${timestamp}', ${total_mem});
END
)

echo $insert_statement

#Step 3: Execute database setup and insert statement
export PGPASSWORD=$password
psql -h $psql_host -p $port -U $user_name -d $db_name -c "$insert_statement"
sleep 1

#Step 4: Save host_id generated by PSQL table to a local file
host_id=`psql -h localhost -U postgres -d host_agent -c "select id from host_info where hostname='${host_name}';" | tail -3 | head -1 | xargs`
echo $host_id > ~/host_id
cat ~/host_id

